#!/bin/sh

set -ue

make_bare()
{
	# Un-do APC
	rm -f /etc/php5/conf.d/apc.ini
	# IF there is an NFS mount, get everything out of it
	if [ -f .nfs-mount ]; then
		rm -f /var/www/wp-content
		rsync -az /mnt/wordpress/wp-content /var/www/
	fi
}

make_single()
{
	juju-log "Installing PHP apc.ini ..."
	rm -f /etc/php5/conf.d/apc.ini
	install -o root -g root -m 0644 files/charm/php/php5_conf.d_apc.ini /etc/php5/conf.d/apc.ini
	# Check if we have an nfs-mount and magic that sucker up.
}

make_optimized()
{
	# First thing is first, STOP ALL THE PLUGINS
}

make_nfs()
{
	if [ -f .nfs-mount ]; then
		# This has all the NFS mount stuff in it
		source .nfs-mount
		mkdir -p /mnt/wordpress
		mount -t $MOUNT_TYPE -o $MOUNT_OPS $MOUNT_SERVER:/ /mnt/wordpress
		if[ $? -ne 0 ]; then
			juju-log "Could not connect to file-server"
			exit 1 # OH THE HUMANITY OF IT ALL
		fi
		rsync -az /var/www/wp-content /mnt/wordpress/
		mv /var/www/wp-content /var/www/wp-content.bak.$(date +%Y%m%d-%H%M%S) && rm -rf /var/www/wp-content
		ln -s /mnt/wordpress/wp-content /var/www/
	else
		juju-log "There is no nfs mount, not sure what to do, so we'll just bail"
	fi
}

tuning_level=`config-get tuning`

if[ "$tuning_level" == "optimized" ]; then
	# First and foremost, we need to disable the ability to edit
	# themes and upload/update plugins. This breaks a scale-out
	# environment. It's sad but true. If you want to update a plugin
	# install a theme, etc; take a look at the README.
elif[ "$tuning_level" == "single" ]; then
	# We need to prepare an NFS mount, because someone is probably
	# going to try to scale out. We also need to vamp up caching
elif[ "$tuning_level" == "bare" ]; then
	# Okay, you know what you're doing. You're probably going to
	# use Gluster to stream-line your files, so you don't need to
	# disable anything. We trust you to do what you need to.
else
	juju-log "Not sure about that tuning level."
	exit 1
fi
